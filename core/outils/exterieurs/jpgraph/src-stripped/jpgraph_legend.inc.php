<?php
 DEFINE('_DEFAULT_LPM_SIZE',8); class Legend { public $txtcol=array(); public $font_family=FF_FONT1,$font_style=FS_NORMAL,$font_size=12; private $color=array(0,0,0); private $fill_color=array(235,235,235); private $shadow=true; private $shadow_color='darkgray'; private $mark_abs_hsize=_DEFAULT_LPM_SIZE,$mark_abs_vsize=_DEFAULT_LPM_SIZE; private $xmargin=10,$ymargin=0,$shadow_width=2; private $xlmargin=4; private $ylinespacing=5; private $ybottom_margin = 8; private $xpos=0.05, $ypos=0.15, $xabspos=-1, $yabspos=-1; private $halign="right", $valign="top"; private $font_color='black'; private $hide=false,$layout_n=1; private $weight=1,$frameweight=1; private $csimareas=''; private $reverse = false ; private $bkg_gradtype=-1, $bkg_gradfrom='lightgray', $bkg_gradto='gray'; function __construct() { } function Hide($aHide=true) { $this->hide=$aHide; } function SetHColMargin($aXMarg) { $this->xmargin = $aXMarg; } function SetVColMargin($aSpacing) { $this->ylinespacing = $aSpacing ; } function SetLeftMargin($aXMarg) { $this->xlmargin = $aXMarg; } function SetLineSpacing($aSpacing) { $this->ylinespacing = $aSpacing ; } function SetShadow($aShow='gray',$aWidth=4) { if( is_string($aShow) ) { $this->shadow_color = $aShow; $this->shadow=true; } else { $this->shadow = $aShow; } $this->shadow_width = $aWidth; } function SetMarkAbsSize($aSize) { $this->mark_abs_vsize = $aSize ; $this->mark_abs_hsize = $aSize ; } function SetMarkAbsVSize($aSize) { $this->mark_abs_vsize = $aSize ; } function SetMarkAbsHSize($aSize) { $this->mark_abs_hsize = $aSize ; } function SetLineWeight($aWeight) { $this->weight = $aWeight; } function SetFrameWeight($aWeight) { $this->frameweight = $aWeight; } function SetLayout($aDirection=LEGEND_VERT) { $this->layout_n = $aDirection==LEGEND_VERT ? 1 : 99 ; } function SetColumns($aCols) { $this->layout_n = $aCols ; } function SetReverse($f=true) { $this->reverse = $f ; } function SetColor($aFontColor,$aColor='black') { $this->font_color=$aFontColor; $this->color=$aColor; } function SetFont($aFamily,$aStyle=FS_NORMAL,$aSize=10) { $this->font_family = $aFamily; $this->font_style = $aStyle; $this->font_size = $aSize; } function SetPos($aX,$aY,$aHAlign='right',$aVAlign='top') { $this->Pos($aX,$aY,$aHAlign,$aVAlign); } function SetAbsPos($aX,$aY,$aHAlign='right',$aVAlign='top') { $this->xabspos=$aX; $this->yabspos=$aY; $this->halign=$aHAlign; $this->valign=$aVAlign; } function Pos($aX,$aY,$aHAlign='right',$aVAlign='top') { if( !($aX<1 && $aY<1) ) { JpGraphError::RaiseL(25120); } $this->xpos=$aX; $this->ypos=$aY; $this->halign=$aHAlign; $this->valign=$aVAlign; } function SetFillColor($aColor) { $this->fill_color=$aColor; } function Clear() { $this->txtcol = array(); } function Add($aTxt,$aColor,$aPlotmark='',$aLinestyle=0,$csimtarget='',$csimalt='',$csimwintarget='') { $this->txtcol[]=array($aTxt,$aColor,$aPlotmark,$aLinestyle,$csimtarget,$csimalt,$csimwintarget); } function GetCSIMAreas() { return $this->csimareas; } function SetBackgroundGradient($aFrom='navy',$aTo='silver',$aGradType=2) { $this->bkg_gradtype=$aGradType; $this->bkg_gradfrom = $aFrom; $this->bkg_gradto = $aTo; } function Stroke($aImg) { $fillBoxFrameWeight=1; if( $this->hide ) return; $aImg->SetFont($this->font_family,$this->font_style,$this->font_size); if( $this->reverse ) { $this->txtcol = array_reverse($this->txtcol); } $n=count($this->txtcol); if( $n == 0 ) return; $numcolumns = ($n > $this->layout_n ? $this->layout_n : $n); for( $i=0; $i < $numcolumns; ++$i ) { $colwidth[$i] = $aImg->GetTextWidth($this->txtcol[$i][0]) + 2*$this->xmargin + 2*$this->mark_abs_hsize; $colheight[$i] = 0; } $rows = 0 ; $rowheight[0] = 0; for( $i=0; $i < $n; ++$i ) { $h = max($this->mark_abs_vsize,$aImg->GetTextHeight($this->txtcol[$i][0]))+$this->ylinespacing; if( $i % $numcolumns == 0 ) { $rows++; $rowheight[$rows-1] = 0; } $rowheight[$rows-1] = max($rowheight[$rows-1],$h); } $abs_height = 0; for( $i=0; $i < $rows; ++$i ) { $abs_height += $rowheight[$i] ; } $abs_height = max($abs_height,$this->mark_abs_vsize); $abs_height += $this->ybottom_margin; for( $i=$numcolumns; $i < $n; ++$i ) { $colwidth[$i % $numcolumns] = max( $aImg->GetTextWidth($this->txtcol[$i][0])+2*$this->xmargin+2*$this->mark_abs_hsize, $colwidth[$i % $numcolumns]); } $mtw = 0; for( $i=0; $i < $numcolumns; ++$i ) { $mtw += $colwidth[$i] ; } $abs_height -= $this->ylinespacing; $abs_width = $mtw+$this->xlmargin+($numcolumns-1)*$this->mark_abs_hsize; if( $this->xabspos === -1 && $this->yabspos === -1 ) { $this->xabspos = $this->xpos*$aImg->width ; $this->yabspos = $this->ypos*$aImg->height ; } if( $this->halign == 'left' ) { $xp = $this->xabspos; } elseif( $this->halign == 'center' ) { $xp = $this->xabspos - $abs_width/2; } else { $xp = $aImg->width - $this->xabspos - $abs_width; } $yp=$this->yabspos; if( $this->valign == 'center' ) { $yp-=$abs_height/2; } elseif( $this->valign == 'bottom' ) { $yp-=$abs_height; } $aImg->SetColor($this->color); $aImg->SetLineWeight($this->frameweight); $aImg->SetLineStyle('solid'); if( $this->shadow ) { $aImg->ShadowRectangle($xp,$yp, $xp+$abs_width+$this->shadow_width+2, $yp+$abs_height+$this->shadow_width+2, $this->fill_color,$this->shadow_width+2,$this->shadow_color); } else { $aImg->SetColor($this->fill_color); $aImg->FilledRectangle($xp,$yp,$xp+$abs_width,$yp+$abs_height); $aImg->SetColor($this->color); $aImg->Rectangle($xp,$yp,$xp+$abs_width,$yp+$abs_height); } if( $this->bkg_gradtype >= 0 ) { $grad = new Gradient($aImg); $grad->FilledRectangle($xp+1, $yp+1, $xp+$abs_width-3, $yp+$abs_height-3, $this->bkg_gradfrom, $this->bkg_gradto, $this->bkg_gradtype); } $x1 = $xp + $this->xlmargin; $y1 = $yp + $rowheight[0] - $this->ylinespacing + 2 ; $grad = new Gradient($aImg); $patternFactory = null; $i = 1 ; $row = 0; foreach($this->txtcol as $p) { if( _JPG_DEBUG ) { $aImg->SetLineWeight(1); $aImg->SetColor('red'); $aImg->SetLineStyle('solid'); $aImg->Rectangle($x1,$y1,$xp+$abs_width-1,$y1-$rowheight[$row]); } $aImg->SetLineWeight($this->weight); $x1 = round($x1)+1; $y1=round($y1); if( !preg_match('/\n/',$p[0]) ) { $marky = ceil($y1-$this->mark_abs_vsize/2)-1; } else { $marky = $y1 - $aImg->GetTextHeight($p[0])/2; } $x1 += $this->mark_abs_hsize; if ( !empty($p[2]) && $p[2]->GetType() > -1 ) { $aImg->SetColor($p[1]); if( is_string($p[3]) || $p[3]>0 ) { $aImg->SetLineStyle($p[3]); $aImg->StyleLine($x1-$this->mark_abs_hsize,$marky,$x1+$this->mark_abs_hsize,$marky); } if( $p[2]->GetType() != MARK_IMG ) { $p[2]->iFormatCallback = ''; $p[2]->iFormatCallback2 = ''; if( $p[2]->GetType() == MARK_FILLEDCIRCLE || $p[2]->GetType() == MARK_CIRCLE ) { $p[2]->SetSize(min($this->mark_abs_vsize,$this->mark_abs_hsize)/2); $p[2]->Stroke($aImg,$x1,$marky); } else { $p[2]->SetSize(min($this->mark_abs_vsize,$this->mark_abs_hsize)); $p[2]->Stroke($aImg,$x1,$marky); } } } elseif ( !empty($p[2]) && (is_string($p[3]) || $p[3]>0 ) ) { $aImg->SetColor($p[1]); $aImg->SetLineStyle($p[3]); $aImg->StyleLine($x1-$this->mark_abs_hsize,$marky,$x1+$this->mark_abs_hsize,$marky); $aImg->StyleLine($x1-$this->mark_abs_hsize,$marky+1,$x1+$this->mark_abs_hsize,$marky+1); } else { $color = $p[1] ; $boxsize = max($this->mark_abs_vsize,$this->mark_abs_hsize) + 2 ; $ym = $marky-ceil($boxsize/2) ; if( $p[3] < -100 ) { if( $patternFactory == null ) { $patternFactory = new RectPatternFactory(); } $prect = $patternFactory->Create($p[1][0],$p[1][1],1); $prect->SetBackground($p[1][3]); $prect->SetDensity($p[1][2]+1); $prect->SetPos(new Rectangle($x1,$ym,$boxsize,$boxsize)); $prect->Stroke($aImg); $prect=null; } else { if( is_array($color) && count($color)==2 ) { $grad->FilledRectangle($x1-$boxsize/2,$ym, $x1+$boxsize/2,$ym+$boxsize, $color[0],$color[1],-$p[3]); } else { $aImg->SetColor($p[1]); $aImg->FilledRectangle($x1-$boxsize/2,$ym, $x1+$boxsize/2,$ym+$boxsize); } $aImg->SetColor($this->color); $aImg->SetLineWeight($fillBoxFrameWeight); $aImg->Rectangle($x1-$boxsize/2,$ym, $x1+$boxsize/2,$ym+$boxsize); } } $aImg->SetColor($this->font_color); $aImg->SetFont($this->font_family,$this->font_style,$this->font_size); $aImg->SetTextAlign('left','baseline'); $debug=false; $aImg->StrokeText($x1+$this->mark_abs_hsize+$this->xmargin,$y1,$p[0], 0,'left',$debug); if( !empty($p[4]) ) { $xs = $x1 - $this->mark_abs_hsize ; $ys = $y1 + 1 ; $xe = $x1 + $aImg->GetTextWidth($p[0]) + $this->mark_abs_hsize + $this->xmargin ; $ye = $y1-$rowheight[$row]+1; $coords = "$xs,$ys,$xe,$y1,$xe,$ye,$xs,$ye"; if( ! empty($p[4]) ) { $this->csimareas .= "<area shape=\"poly\" coords=\"$coords\" href=\"".htmlentities($p[4])."\""; if( !empty($p[6]) ) { $this->csimareas .= " target=\"".$p[6]."\""; } if( !empty($p[5]) ) { $tmp=sprintf($p[5],$p[0]); $this->csimareas .= " title=\"$tmp\" alt=\"$tmp\" "; } $this->csimareas .= " />\n"; } } if( $i >= $this->layout_n ) { $x1 = $xp+$this->xlmargin; $row++; if( !empty($rowheight[$row]) ) $y1 += $rowheight[$row]; $i = 1; } else { $x1 += $colwidth[($i-1) % $numcolumns] ; ++$i; } } } } ?>
